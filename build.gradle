import static org.gradle.internal.os.OperatingSystem.*

plugins {
    id 'maven'
    id 'java'
    id 'java-library'
    id "org.jetbrains.kotlin.jvm" version "1.3.41"
    id "com.github.johnrengelman.shadow" version '5.1.0'
}

// jitpack
group = 'com.github.kotlin-graphics'

ext {
    moduleName = 'com.github.kotlin_graphics.gln'
    kotlin = 'org.jetbrains.kotlin:kotlin'
    kotlin_version = '1.3.41'
    kotlintest_version = '3.3.3'
    gli_version = '7215fca3cc82f8757b29f1a6b5e5527555ccd0ba'
    glm_version = '148636ff5d0d7d744707bc39acc7fa7bf5bc4dd8'
    kool_version = '12dabfead107537474721bbd84ba148ca339ee9b'
    unsigned_version = 'da0d936cb929bdfd5c8bcc2858f6162bdfdd4433'
    lwjgl_version = "3.2.2"
    lwjgl_natives = current() == WINDOWS ? "windows" : current() == LINUX ? "linux" : "macos"
}

dependencies {

    implementation "$kotlin-stdlib"
    implementation "$kotlin-reflect"

    def kx = "com.github.kotlin-graphics"
    api "${kx}:gli:$gli_version".toString()
    api "${kx}.glm:glm:$glm_version".toString()
    api "${kx}:kool:$kool_version".toString()
    api "${kx}:kotlin-unsigned:$unsigned_version".toString()

    ["", "-glfw", "-jemalloc", "-openal", "-opengl", "-stb"].each {
        implementation "org.lwjgl:lwjgl$it:$lwjgl_version"
        runtime "org.lwjgl:lwjgl$it:$lwjgl_version:natives-$lwjgl_natives"
    }
}

repositories {
    mavenCentral()
    maven { setUrl("https://dl.bintray.com/kotlin/kotlin-eap") }
    maven { setUrl("https://oss.sonatype.org/content/repositories/snapshots/") }
    maven { setUrl('https://jitpack.io') }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier = 'javadoc'
    from javadoc.destinationDir
}

compileKotlin {
    // Enable Kotlin compilation to Java 8 class files with method parameter name metadata
    kotlinOptions {
        freeCompilerArgs = ["-XXLanguage:+InlineClasses", "-Xjvm-default=enable"]
        jvmTarget = "1.8"
//        javaParameters = true
    }
    // As per https://stackoverflow.com/a/47669720
    // See also https://discuss.kotlinlang.org/t/kotlin-support-for-java-9-module-system/2499/9
    destinationDir = compileJava.destinationDir
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
//        javaParameters = true
    }
}

compileJava {
    dependsOn(':compileKotlin')
    doFirst {
        options.compilerArgs = ['--module-path', classpath.asPath,]
        classpath = files()
    }
}

artifacts {
    archives sourcesJar
//    archives javadocJar
}

jar {
    inputs.property("moduleName", moduleName)
    manifest.attributes('Automatic-Module-Name': moduleName)
}

shadowJar.archiveClassifier = 'all'